{"version":3,"sources":["../../src/rules/checkParamNames.js"],"names":["validateParameterNames","targetTagName","allowExtraTrailingParamDocs","checkRestProperty","checkTypesRegex","enableFixer","functionParameterNames","jsdoc","jsdocNode","utils","report","paramTags","Object","entries","tags","filter","tag","paramTagsNonNested","name","includes","dotted","some","index","tagsIndex","dupeTagInfo","find","tgsIndex","tg","idx","reportJSDoc","splice","functionParameterName","Array","isArray","type","search","parameterName","names","properties","hasPropertyRest","rests","tagName","trim","expectedNames","map","actualNames","paramTag","missingProperties","forEach","push","extraProperties","startsWith","length","missingProperty","extraProperty","funcParamName","join","validateParameterNamesDeep","jsdocParameterNames","lastRealParameter","jsdocParameterName","isPropertyPath","pathRootNodeName","slice","indexOf","endsWith","context","checkTypesPattern","options","lastSlashPos","lastIndexOf","RegExp","jsdocParameterNamesDeep","getJsdocTagsDeep","getFunctionParameterNames","getPreferredTagName","isError","meta","docs","description","fixable","schema","additionalProperties"],"mappings":"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","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nconst validateParameterNames = (\n  targetTagName : string,\n  allowExtraTrailingParamDocs: boolean,\n  checkRestProperty : boolean,\n  checkTypesRegex : RegExp,\n  enableFixer: boolean,\n  functionParameterNames : Array<string>, jsdoc, jsdocNode, utils, report,\n) => {\n  const paramTags = Object.entries(jsdoc.tags).filter(([, tag]) => {\n    return tag.tag === targetTagName;\n  });\n  const paramTagsNonNested = paramTags.filter(([, tag]) => {\n    return !tag.name.includes('.');\n  });\n\n  let dotted = 0;\n\n  return paramTags.some(([, tag], index) => {\n    let tagsIndex;\n    const dupeTagInfo = paramTags.find(([tgsIndex, tg], idx) => {\n      tagsIndex = tgsIndex;\n\n      return tg.name === tag.name && idx !== index;\n    });\n    if (dupeTagInfo) {\n      utils.reportJSDoc(`Duplicate @${targetTagName} \"${tag.name}\"`, dupeTagInfo[1], enableFixer ? () => {\n        jsdoc.tags.splice(tagsIndex, 1);\n      } : null);\n\n      return true;\n    }\n    if (tag.name.includes('.')) {\n      dotted++;\n\n      return false;\n    }\n\n    const functionParameterName = functionParameterNames[index - dotted];\n\n    if (!functionParameterName) {\n      if (allowExtraTrailingParamDocs) {\n        return false;\n      }\n\n      report(\n        `@${targetTagName} \"${tag.name}\" does not match an existing function parameter.`,\n        null,\n        tag,\n      );\n\n      return true;\n    }\n\n    if (Array.isArray(functionParameterName)) {\n      if (tag.type && tag.type.search(checkTypesRegex) === -1) {\n        return false;\n      }\n\n      const [parameterName, {\n        names: properties, hasPropertyRest, rests,\n      }] = functionParameterName;\n      const tagName = parameterName ? parameterName : tag.name.trim();\n      const expectedNames = properties.map((name) => {\n        return `${tagName}.${name}`;\n      });\n      const actualNames = paramTags.map(([, paramTag]) => {\n        return paramTag.name.trim();\n      });\n\n      const missingProperties = [];\n      expectedNames.forEach((name, idx) => {\n        if (!actualNames.includes(name)) {\n          if (!checkRestProperty && rests[idx]) {\n            return;\n          }\n          missingProperties.push(name);\n        }\n      });\n\n      const extraProperties = [];\n      if (!hasPropertyRest || checkRestProperty) {\n        actualNames.filter((name) => {\n          return name.startsWith(tag.name.trim() + '.');\n        }).forEach((name) => {\n          if (!expectedNames.includes(name) && name !== tag.name) {\n            extraProperties.push(name);\n          }\n        });\n      }\n\n      if (missingProperties.length) {\n        missingProperties.forEach((missingProperty) => {\n          report(`Missing @${targetTagName} \"${missingProperty}\"`, null, tag);\n        });\n\n        return true;\n      }\n\n      if (extraProperties.length) {\n        extraProperties.forEach((extraProperty) => {\n          report(`@${targetTagName} \"${extraProperty}\" does not exist on ${tag.name}`, null, tag);\n        });\n\n        return true;\n      }\n\n      return false;\n    }\n\n    let funcParamName;\n    if (typeof functionParameterName === 'object') {\n      const {name} = functionParameterName;\n      funcParamName = name;\n    } else {\n      funcParamName = functionParameterName;\n    }\n\n    if (funcParamName !== tag.name.trim()) {\n      // Todo: This won't work for array or object child items\n      const expectedNames = functionParameterNames.join(', ');\n      const actualNames = paramTagsNonNested.map(([, {name}]) => {\n        return name.trim();\n      }).join(', ');\n\n      report(\n        `Expected @${targetTagName} names to be \"${expectedNames}\". Got \"${actualNames}\".`,\n        null,\n        tag,\n      );\n\n      return true;\n    }\n\n    return false;\n  });\n};\n\nconst validateParameterNamesDeep = (\n  targetTagName : string, allowExtraTrailingParamDocs: boolean,\n  jsdocParameterNames : Array<string>, jsdoc, report : Function,\n) => {\n  let lastRealParameter;\n\n  return jsdocParameterNames.some(({name: jsdocParameterName, idx}) => {\n    const isPropertyPath = jsdocParameterName.includes('.');\n\n    if (isPropertyPath) {\n      if (!lastRealParameter) {\n        report(`@${targetTagName} path declaration (\"${jsdocParameterName}\") appears before any real parameter.`, null, jsdoc.tags[idx]);\n\n        return true;\n      }\n\n      let pathRootNodeName = jsdocParameterName.slice(0, jsdocParameterName.indexOf('.'));\n\n      if (pathRootNodeName.endsWith('[]')) {\n        pathRootNodeName = pathRootNodeName.slice(0, -2);\n      }\n\n      if (pathRootNodeName !== lastRealParameter) {\n        report(\n          `@${targetTagName} path declaration (\"${jsdocParameterName}\") root node name (\"${pathRootNodeName}\") ` +\n          `does not match previous real parameter name (\"${lastRealParameter}\").`,\n          null,\n          jsdoc.tags[idx],\n        );\n\n        return true;\n      }\n    } else {\n      lastRealParameter = jsdocParameterName;\n    }\n\n    return false;\n  });\n};\n\nexport default iterateJsdoc(({\n  context,\n  jsdoc,\n  jsdocNode,\n  report,\n  utils,\n}) => {\n  const {\n    allowExtraTrailingParamDocs,\n    checkRestProperty = false,\n    checkTypesPattern = '/^(?:[oO]bject|[aA]rray|PlainObject|Generic(?:Object|Array))$/',\n    enableFixer = false,\n  } = context.options[0] || {};\n\n  const lastSlashPos = checkTypesPattern.lastIndexOf('/');\n  const checkTypesRegex = lastSlashPos === -1 ?\n    new RegExp(checkTypesPattern) :\n    new RegExp(checkTypesPattern.slice(1, lastSlashPos), checkTypesPattern.slice(lastSlashPos + 1));\n\n  const jsdocParameterNamesDeep = utils.getJsdocTagsDeep('param');\n  if (!jsdocParameterNamesDeep.length) {\n    return;\n  }\n  const functionParameterNames = utils.getFunctionParameterNames();\n  const targetTagName = utils.getPreferredTagName({tagName: 'param'});\n  const isError = validateParameterNames(\n    targetTagName,\n    allowExtraTrailingParamDocs,\n    checkRestProperty,\n    checkTypesRegex,\n    enableFixer,\n    functionParameterNames,\n    jsdoc, jsdocNode, utils, report,\n  );\n\n  if (isError) {\n    return;\n  }\n\n  validateParameterNamesDeep(\n    targetTagName, allowExtraTrailingParamDocs, jsdocParameterNamesDeep,\n    jsdoc, report,\n  );\n}, {\n  meta: {\n    docs: {\n      description: 'Ensures that parameter names in JSDoc match those in the function declaration.',\n    },\n    fixable: 'code',\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          allowExtraTrailingParamDocs: {\n            type: 'boolean',\n          },\n          checkRestProperty: {\n            type: 'boolean',\n          },\n          checkTypesPattern: {\n            type: 'string',\n          },\n          enableFixer: {\n            type: 'boolean',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"file":"checkParamNames.js"}