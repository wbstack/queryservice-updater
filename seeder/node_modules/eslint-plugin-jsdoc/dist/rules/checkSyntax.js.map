{"version":3,"sources":["../../src/rules/checkSyntax.js"],"names":["jsdoc","report","tags","tag","type","slice","iterateAllJsdocs","meta","docs","description"],"mappings":";;;;;;;AAAA;;;;eAEe,2BAAa,CAAC;AAC3BA,EAAAA,KAD2B;AAE3BC,EAAAA;AAF2B,CAAD,KAGtB;AACJ,MAAI,CAACD,KAAK,CAACE,IAAX,EAAiB;AACf;AACD;;AAED,OAAK,MAAMC,GAAX,IAAkBH,KAAK,CAACE,IAAxB,EAA8B;AAC5B,QAAIC,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAC,CAAhB,MAAuB,GAA3B,EAAgC;AAC9BJ,MAAAA,MAAM,CAAC,qDAAD,EAAwD,IAAxD,EAA8DE,GAA9D,CAAN;AACA;AACD;AACF;AACF,CAdc,EAcZ;AACDG,EAAAA,gBAAgB,EAAE,IADjB;AAEDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE;AADT,KADF;AAIJL,IAAAA,IAAI,EAAE;AAJF;AAFL,CAdY,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n}) => {\n  if (!jsdoc.tags) {\n    return;\n  }\n\n  for (const tag of jsdoc.tags) {\n    if (tag.type.slice(-1) === '=') {\n      report('Syntax should not be Google Closure Compiler style.', null, tag);\n      break;\n    }\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Reports against Google Closure Compiler syntax.',\n    },\n    type: 'suggestion',\n  },\n});\n"],"file":"checkSyntax.js"}