{"version":3,"sources":["../src/jsdocUtils.js"],"names":["flattenRoots","params","root","hasRestElement","hasPropertyRest","rests","names","reduce","acc","cur","Array","isArray","nms","flattened","inner","filter","Boolean","push","concat","isRestProperty","restElement","name","getPropertiesFromPropertySignature","propSignature","type","undefined","typeAnnotation","key","members","map","member","getFunctionParameterNames","functionNode","getParamName","param","isProperty","_","has","left","propertyNames","properties","roots","prop","value","elements","idx","includes","argument","parameter","Error","getJsdocTagsDeep","jsdoc","targetTagName","ret","tags","forEach","tag","modeWarnSettings","getTagNamesForMode","mode","context","jsdocTags","typeScriptTags","closureTags","hasBeenWarned","report","loc","start","column","line","message","markSettingAsWarned","getPreferredTagName","tagPreference","prefValues","Object","values","some","prefVal","replacement","tagPreferenceFixed","mapKeys","replace","tagNames","preferredTagName","entries","find","aliases","isValidTag","definedTags","validTagNames","keys","flatten","additionalTags","allTags","hasTag","targetTagLower","toLowerCase","doc","hasATag","targetTagNames","hasDefinedTypeReturnTag","tagType","trim","tagsWithMandatoryTypePosition","Set","tagsWithMandatoryTypePositionClosure","tagsWithOptionalTypePosition","tagsWithOptionalTypePositionClosure","namepathDefiningTags","tagsWithOptionalNamePosition","tagsWithMandatoryNamePosition","tagsWithMandatoryTypeOrNamePosition","isNamepathDefiningTag","tagName","tagMightHaveTypePosition","tagMustHaveTypePosition","tagMightHaveNamePosition","tagMustHaveNamePosition","tagMightHaveEitherTypeOrNamePosition","tagMustHaveEitherTypeOrNamePosition","hasReturnValue","node","expression","body","bodyNode","consequent","alternate","block","handler","finalizer","cases","someCase","hasThrowValue","parseClosureTemplateTag","description","split","enforcedContexts","defaultContexts","contexts","options","getContextObject","checkJsdoc","filterTags","tagsWithNamesAndDescriptions","getTagsByType","descName","tagsWithoutNames","tagsWithNames","tagWithName","getIndent","sourceCode","indent","text","match","charAt"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport {jsdocTags, closureTags, typeScriptTags} from './tagNames';\nimport WarnSettings from './WarnSettings';\n\ntype ParserMode = \"jsdoc\"|\"typescript\"|\"closure\";\n\n// Given a nested array of property names, reduce them to a single array,\n// appending the name of the root element along the way if present.\nconst flattenRoots = (params, root = '') => {\n  let hasRestElement = false;\n  let hasPropertyRest = false;\n  const rests = [];\n\n  // eslint-disable-next-line unicorn/no-reduce\n  const names = params.reduce((acc, cur) => {\n    if (Array.isArray(cur)) {\n      let nms;\n      if (Array.isArray(cur[1])) {\n        nms = cur[1];\n      } else {\n        if (cur[1].hasRestElement) {\n          hasRestElement = true;\n        }\n        if (cur[1].hasPropertyRest) {\n          hasPropertyRest = true;\n        }\n        nms = cur[1].names;\n      }\n\n      const flattened = flattenRoots(nms, root ? `${root}.${cur[0]}` : cur[0]);\n      if (flattened.hasRestElement) {\n        hasRestElement = true;\n      }\n      if (flattened.hasPropertyRest) {\n        hasPropertyRest = true;\n      }\n      const inner = [\n        root ? `${root}.${cur[0]}` : cur[0],\n        ...flattened.names,\n      ].filter(Boolean);\n      rests.push(false, ...flattened.rests);\n\n      return acc.concat(inner);\n    }\n    if (typeof cur === 'object') {\n      if (cur.isRestProperty) {\n        hasPropertyRest = true;\n        rests.push(true);\n      } else {\n        rests.push(false);\n      }\n      if (cur.restElement) {\n        hasRestElement = true;\n      }\n      acc.push(root ? `${root}.${cur.name}` : cur.name);\n    } else if (typeof cur !== 'undefined') {\n      rests.push(false);\n      acc.push(root ? `${root}.${cur}` : cur);\n    }\n\n    return acc;\n  }, []);\n\n  return {\n    hasPropertyRest,\n    hasRestElement,\n    names,\n    rests,\n  };\n};\n\ntype T = string | [?string, T];\nconst getPropertiesFromPropertySignature = (propSignature): T => {\n  if (propSignature.type === 'TSIndexSignature' || propSignature.type === 'TSConstructSignatureDeclaration') {\n    return undefined;\n  }\n  if (propSignature.typeAnnotation && propSignature.typeAnnotation.typeAnnotation.type === 'TSTypeLiteral') {\n    return [propSignature.key.name, propSignature.typeAnnotation.typeAnnotation.members.map((member) => {\n      return getPropertiesFromPropertySignature(member);\n    })];\n  }\n\n  return propSignature.key.name;\n};\n\nconst getFunctionParameterNames = (functionNode : Object) : Array<T> => {\n  // eslint-disable-next-line complexity\n  const getParamName = (param, isProperty) => {\n    if (_.has(param, 'typeAnnotation') || _.has(param, 'left.typeAnnotation')) {\n      const typeAnnotation = _.has(param, 'left.typeAnnotation') ? param.left.typeAnnotation : param.typeAnnotation;\n      if (typeAnnotation.typeAnnotation.type === 'TSTypeLiteral') {\n        const propertyNames = typeAnnotation.typeAnnotation.members.map((member) => {\n          return getPropertiesFromPropertySignature(member);\n        });\n        const flattened = flattenRoots(propertyNames);\n        if (_.has(param, 'name') || _.has(param, 'left.name')) {\n          return [_.has(param, 'left.name') ? param.left.name : param.name, flattened];\n        }\n\n        return [undefined, flattened];\n      }\n    }\n\n    if (_.has(param, 'name')) {\n      return param.name;\n    }\n\n    if (_.has(param, 'left.name')) {\n      return param.left.name;\n    }\n\n    if (param.type === 'ObjectPattern' || param.left?.type === 'ObjectPattern') {\n      const properties = param.properties || param.left?.properties;\n      const roots = properties.map((prop) => {\n        return getParamName(prop, true);\n      });\n\n      return [undefined, flattenRoots(roots)];\n    }\n\n    if (param.type === 'Property') {\n      if (param.value.type === 'ObjectPattern') {\n        return [param.key.name, param.value.properties.map((prop) => {\n          return getParamName(prop, isProperty);\n        })];\n      }\n\n      // As function parameters, these do not allow dynamic properties, etc.\n      /* istanbul ignore else */\n      if (param.key.type === 'Identifier') {\n        return param.key.name;\n      }\n    }\n\n    if (param.type === 'ArrayPattern' || param.left?.type === 'ArrayPattern') {\n      const elements = param.elements || param.left?.elements;\n      const roots = elements.map((prop, idx) => {\n        return {\n          name: idx,\n          restElement: prop.type === 'RestElement',\n        };\n      });\n\n      return [undefined, flattenRoots(roots)];\n    }\n\n    if (['RestElement', 'ExperimentalRestProperty'].includes(param.type)) {\n      return {\n        isRestProperty: isProperty,\n        name: param.argument.name,\n        restElement: true,\n      };\n    }\n\n    if (param.type === 'TSParameterProperty') {\n      return getParamName(param.parameter, true);\n    }\n\n    throw new Error('Unsupported function signature format.');\n  };\n\n  return functionNode.params.map((param) => {\n    return getParamName(param);\n  });\n};\n\n/**\n * Gets all names of the target type, including those that refer to a path, e.g.\n * \"@param foo; @param foo.bar\".\n */\nconst getJsdocTagsDeep = (jsdoc : Object, targetTagName : string) : Array<Object> => {\n  const ret = [];\n  (jsdoc.tags || []).forEach(({name, tag, type}, idx) => {\n    if (tag !== targetTagName) {\n      return;\n    }\n    ret.push({\n      idx,\n      name,\n      type,\n    });\n  });\n\n  return ret;\n};\n\nconst modeWarnSettings = WarnSettings();\n\nconst getTagNamesForMode = (mode, context) => {\n  switch (mode) {\n  case 'jsdoc':\n    return jsdocTags;\n  case 'typescript':\n    return typeScriptTags;\n  case 'closure':\n    return closureTags;\n  default:\n    if (!modeWarnSettings.hasBeenWarned(context, 'mode')) {\n      context.report({\n        loc: {\n          start: {\n            column: 1,\n            line: 1,\n          },\n        },\n        message: `Unrecognized value \\`${mode}\\` for \\`settings.jsdoc.mode\\`.`,\n      });\n      modeWarnSettings.markSettingAsWarned(context, 'mode');\n    }\n\n    // We'll avoid breaking too many other rules\n    return jsdocTags;\n  }\n};\n\nconst getPreferredTagName = (\n  context,\n  mode : ParserMode,\n  name : string,\n  tagPreference : Object = {},\n) : string|Object => {\n  const prefValues = Object.values(tagPreference);\n  if (prefValues.includes(name) || prefValues.some((prefVal) => {\n    return prefVal && typeof prefVal === 'object' && prefVal.replacement === name;\n  })) {\n    return name;\n  }\n\n  // Allow keys to have a 'tag ' prefix to avoid upstream bug in ESLint\n  // that disallows keys that conflict with Object.prototype,\n  // e.g. 'tag constructor' for 'constructor' (#537)\n  const tagPreferenceFixed = _.mapKeys(tagPreference, (value, key) => {\n    return key.replace('tag ', '');\n  });\n\n  if (_.has(tagPreferenceFixed, name)) {\n    return tagPreferenceFixed[name];\n  }\n\n  const tagNames = getTagNamesForMode(mode, context);\n\n  const preferredTagName = Object.entries(tagNames).find(([, aliases]) => {\n    return aliases.includes(name);\n  })?.[0];\n  if (preferredTagName) {\n    return preferredTagName;\n  }\n\n  return name;\n};\n\nconst isValidTag = (\n  context,\n  mode : ParserMode,\n  name : string,\n  definedTags : Array,\n) : boolean => {\n  const tagNames = getTagNamesForMode(mode, context);\n  const validTagNames = Object.keys(tagNames).concat(_.flatten(Object.values(tagNames)));\n  const additionalTags = definedTags;\n  const allTags = validTagNames.concat(additionalTags);\n\n  return allTags.includes(name);\n};\n\nconst hasTag = (jsdoc : Object, targetTagName : string) : boolean => {\n  const targetTagLower = targetTagName.toLowerCase();\n\n  return _.some(jsdoc.tags, (doc : Object) => {\n    return doc.tag.toLowerCase() === targetTagLower;\n  });\n};\n\nconst hasATag = (jsdoc : Object, targetTagNames : Array) : boolean => {\n  return targetTagNames.some((targetTagName) => {\n    return hasTag(jsdoc, targetTagName);\n  });\n};\n\n/**\n * Checks if the JSDoc comment declares a return value.\n *\n * @param {JsDocTag} tag\n *   the tag which should be checked.\n * @returns {boolean}\n *   true in case a return value is declared; otherwise false.\n */\nconst hasDefinedTypeReturnTag = (tag) => {\n  // The function should not continue in the event @returns is not defined...\n  if (typeof tag === 'undefined' || tag === null) {\n    return false;\n  }\n\n  // .. same applies if it declares `@returns {undefined}` or `@returns {void}`\n  const tagType = tag.type.trim();\n  if (tagType === 'undefined' || tagType === 'void') {\n    return false;\n  }\n\n  // In any other case, something must be returned, and\n  // a return statement is expected\n  return true;\n};\n\nconst tagsWithMandatoryTypePosition = new Set([\n  // These both show curly brackets in the doc signature and examples\n  // \"typeExpression\"\n  'implements',\n\n  // \"typeName\"\n  'type',\n]);\n\nconst tagsWithMandatoryTypePositionClosure = new Set([\n  ...tagsWithMandatoryTypePosition,\n  'this',\n  'define',\n]);\n\n// All of these have a signature with \"type\" except for\n//  `augments`/`extends` (\"namepath\")\n//  `param`/`arg`/`argument` (no signature)\n//  `property`/`prop` (no signature)\n// `modifies` (undocumented)\nconst tagsWithOptionalTypePosition = new Set([\n  // These have the example showing curly brackets but not in their doc signature, e.g.: https://jsdoc.app/tags-enum.html\n  'enum',\n  'member', 'var',\n\n  'typedef',\n\n  // These do not show curly brackets in either the signature or examples\n  'augments', 'extends',\n\n  'class', 'constructor',\n  'constant', 'const',\n\n  // These show the signature with curly brackets but not in the example\n  'module',\n  'namespace',\n\n  // These have no formal signature in the docs but show curly brackets\n  //   in the examples\n  'param', 'arg', 'argument',\n  'property', 'prop',\n\n  // These show curly brackets in the signature and in the examples\n  'returns', 'return',\n  'throws', 'exception',\n  'yields', 'yield',\n\n  // Has no documentation, but test example has curly brackets, and\n  //  \"name\" would be suggested rather than \"namepath\" based on example; not\n  //  sure if name is required\n  'modifies',\n]);\n\nconst tagsWithOptionalTypePositionClosure = new Set([\n  ...tagsWithOptionalTypePosition,\n\n  'export',\n\n  // Shows the signature with curly brackets but not in the example\n  // \"typeExpression\"\n  'package',\n  'private',\n  'protected',\n\n  // These do not show a signature nor show curly brackets in the example\n  'public',\n  'static',\n]);\n\n// None of these show as having curly brackets for their name/namepath\nconst namepathDefiningTags = new Set([\n  // These appear to require a \"name\" in their signature, albeit these\n  //  are somewhat different from other \"name\"'s (including as described\n  // at https://jsdoc.app/about-namepaths.html )\n  'external', 'host',\n  'event',\n\n  // These allow for \"name\"'s in their signature, but indicate as optional\n  'class', 'constructor',\n  'constant', 'const',\n  'function', 'func', 'method',\n  'interface',\n  'member', 'var',\n  'mixin',\n  'namespace',\n\n  // Todo: Should add `module` here (with optional \"name\" and no curly brackets);\n  //  this block impacts `no-undefined-types` and `valid-types` (search for\n  //  \"isNamepathDefiningTag|tagMightHaveNamePosition|tagMightHaveEitherTypeOrNamePosition\")\n\n  // These seem to all require a \"namepath\" in their signatures (with no counter-examples)\n  'name',\n  'typedef',\n  'callback',\n]);\n\n// The following do not seem to allow curly brackets in their doc\n//  signature or examples (besides `modifies`)\nconst tagsWithOptionalNamePosition = new Set([\n  ...namepathDefiningTags,\n\n  // `borrows` has a different format, however, so needs special parsing;\n  //   seems to require both, and as \"namepath\"'s\n  'borrows',\n\n  // Signature seems to require a \"name\" (of an event) and no counter-examples\n  'emits', 'fires',\n  'listens',\n\n  // Signature seems to require a \"namepath\" (and no counter-examples)\n  'alias',\n  'augments', 'extends',\n  'lends',\n  'this',\n\n  // Signature seems to require a \"namepath\" (and no counter-examples),\n  //  though it allows an incomplete namepath ending with connecting symbol\n  'memberof', 'memberof!',\n\n  // Signature seems to require a \"OtherObjectPath\" with no counter-examples\n  'mixes',\n\n  // Signature allows for \"namepath\" or text\n  'see',\n]);\n\n// Todo: `@link` seems to require a namepath OR URL and might be checked as such.\n\n// The doc signature of `event` seems to require a \"name\"\nconst tagsWithMandatoryNamePosition = new Set([\n  // \"name\" (and a special syntax for the `external` name)\n  'external', 'host',\n\n  // \"namepath\"\n  'callback',\n  'name',\n  'typedef',\n]);\n\nconst tagsWithMandatoryTypeOrNamePosition = new Set([\n  // \"namepath\"\n  'alias',\n  'augments', 'extends',\n  'borrows',\n  'lends',\n  'memberof', 'memberof!',\n  'name',\n  'this',\n  'typedef',\n\n  // \"name\"\n  'external', 'host',\n\n  // \"OtherObjectPath\"\n  'mixes',\n]);\n\nconst isNamepathDefiningTag = (tagName) => {\n  return namepathDefiningTags.has(tagName);\n};\n\nconst tagMightHaveTypePosition = (mode, tag) => {\n  if (mode === 'closure') {\n    return tagsWithMandatoryTypePositionClosure.has(tag) ||\n      tagsWithOptionalTypePositionClosure.has(tag);\n  }\n\n  return tagsWithMandatoryTypePosition.has(tag) ||\n    tagsWithOptionalTypePosition.has(tag);\n};\n\nconst tagMustHaveTypePosition = (mode, tag) => {\n  if (mode === 'closure') {\n    return tagsWithMandatoryTypePositionClosure.has(tag);\n  }\n\n  return tagsWithMandatoryTypePosition.has(tag);\n};\n\nconst tagMightHaveNamePosition = (tag) => {\n  return tagsWithOptionalNamePosition.has(tag);\n};\n\nconst tagMustHaveNamePosition = (tag) => {\n  return tagsWithMandatoryNamePosition.has(tag);\n};\n\nconst tagMightHaveEitherTypeOrNamePosition = (mode, tag) => {\n  return tagMightHaveTypePosition(mode, tag) || tagMightHaveNamePosition(tag);\n};\n\nconst tagMustHaveEitherTypeOrNamePosition = (tag) => {\n  return tagsWithMandatoryTypeOrNamePosition.has(tag);\n};\n\n/**\n * Checks if a node has a return statement. Void return does not count.\n *\n * @param {object} node\n * @returns {boolean}\n */\n// eslint-disable-next-line complexity\nconst hasReturnValue = (node) => {\n  if (!node) {\n    return false;\n  }\n  switch (node.type) {\n  case 'FunctionExpression':\n  case 'FunctionDeclaration':\n  case 'ArrowFunctionExpression': {\n    return node.expression || hasReturnValue(node.body);\n  }\n  case 'BlockStatement': {\n    return node.body.some((bodyNode) => {\n      return bodyNode.type !== 'FunctionDeclaration' && hasReturnValue(bodyNode);\n    });\n  }\n  case 'WhileStatement':\n  case 'DoWhileStatement':\n  case 'ForStatement':\n  case 'ForInStatement':\n  case 'ForOfStatement':\n  case 'WithStatement': {\n    return hasReturnValue(node.body);\n  }\n  case 'IfStatement': {\n    return hasReturnValue(node.consequent) || hasReturnValue(node.alternate);\n  }\n  case 'TryStatement': {\n    return hasReturnValue(node.block) ||\n      hasReturnValue(node.handler && node.handler.body) ||\n      hasReturnValue(node.finalizer);\n  }\n  case 'SwitchStatement': {\n    return node.cases.some(\n      (someCase) => {\n        return someCase.consequent.some(hasReturnValue);\n      },\n    );\n  }\n  case 'ReturnStatement': {\n    // void return does not count.\n    if (node.argument === null) {\n      return false;\n    }\n\n    return true;\n  }\n  default: {\n    return false;\n  }\n  }\n};\n\n/**\n * Checks if a node has a throws statement.\n *\n * @param {object} node\n * @returns {boolean}\n */\nconst hasThrowValue = (node) => {\n  if (!node) {\n    return false;\n  }\n  switch (node.type) {\n  case 'FunctionExpression':\n  case 'FunctionDeclaration':\n  case 'ArrowFunctionExpression': {\n    return node.expression || hasThrowValue(node.body);\n  }\n  case 'BlockStatement': {\n    return node.body.some((bodyNode) => {\n      return bodyNode.type !== 'FunctionDeclaration' && hasThrowValue(bodyNode);\n    });\n  }\n  case 'WhileStatement':\n  case 'DoWhileStatement':\n  case 'ForStatement':\n  case 'ForInStatement':\n  case 'ForOfStatement':\n  case 'WithStatement': {\n    return hasThrowValue(node.body);\n  }\n  case 'IfStatement': {\n    return hasThrowValue(node.consequent) || hasThrowValue(node.alternate);\n  }\n\n  // We only consider it to throw an error if the catch or finally blocks throw an error.\n  case 'TryStatement': {\n    return hasThrowValue(node.handler && node.handler.body) ||\n        hasThrowValue(node.finalizer);\n  }\n  case 'SwitchStatement': {\n    return node.cases.some(\n      (someCase) => {\n        return someCase.consequent.some(hasThrowValue);\n      },\n    );\n  }\n  case 'ThrowStatement': {\n    return true;\n  }\n\n  default: {\n    return false;\n  }\n  }\n};\n\n/** @param {string} tag */\n/*\nconst isInlineTag = (tag) => {\n  return /^(@link|@linkcode|@linkplain|@tutorial) /u.test(tag);\n};\n*/\n\n/**\n * Parses GCC Generic/Template types\n *\n * @see {https://github.com/google/closure-compiler/wiki/Generic-Types}\n * @param {JsDocTag} tag\n * @returns {Array<string>}\n */\nconst parseClosureTemplateTag = (tag) => {\n  return (tag.name + ' ' + tag.description)\n    .split(',')\n    .map((type) => {\n      return type.trim();\n    });\n};\n\n/**\n * Checks user option for `contexts` array, defaulting to\n *   contexts designated by the rule. Returns an array of\n *   ESTree AST types, indicating allowable contexts.\n *\n * @param {*} context\n * @param {true|string[]} defaultContexts\n * @returns {string[]}\n */\nconst enforcedContexts = (context, defaultContexts) => {\n  const {\n    contexts = defaultContexts === true ? [\n      'ArrowFunctionExpression',\n      'FunctionDeclaration',\n      'FunctionExpression',\n    ] : defaultContexts,\n  } = context.options[0] || {};\n\n  return contexts;\n};\n\n/**\n * @param {string[]} contexts\n * @param {Function} checkJsdoc\n */\nconst getContextObject = (contexts, checkJsdoc) => {\n  const properties = {};\n\n  contexts.forEach((prop) => {\n    if (typeof prop === 'object') {\n      properties[prop.context] = checkJsdoc;\n    } else {\n      properties[prop] = checkJsdoc;\n    }\n  });\n\n  return properties;\n};\n\nconst filterTags = (tags = [], filter) => {\n  return tags.filter(filter);\n};\n\nconst tagsWithNamesAndDescriptions = new Set([\n  'param', 'arg', 'argument', 'property', 'prop',\n\n  // These two are parsed by our custom parser as though having a `name`\n  'returns', 'return',\n]);\n\nconst getTagsByType = (context, mode, tags, tagPreference) => {\n  const descName = getPreferredTagName(context, mode, 'description', tagPreference);\n  const tagsWithoutNames = [];\n  const tagsWithNames = filterTags(tags, (tag) => {\n    const {tag: tagName} = tag;\n    const tagWithName = tagsWithNamesAndDescriptions.has(tagName);\n    if (!tagWithName && tagName !== descName) {\n      tagsWithoutNames.push(tag);\n    }\n\n    return tagWithName;\n  });\n\n  return {\n    tagsWithNames,\n    tagsWithoutNames,\n  };\n};\n\nconst getIndent = (sourceCode) => {\n  let indent = sourceCode.text.match(/^\\n*([ \\t]+)/u);\n  indent = indent ? indent[1] + indent[1].charAt() : ' ';\n\n  return indent;\n};\n\nexport default {\n  enforcedContexts,\n  filterTags,\n  flattenRoots,\n  getContextObject,\n  getFunctionParameterNames,\n  getIndent,\n  getJsdocTagsDeep,\n  getPreferredTagName,\n  getTagsByType,\n  hasATag,\n  hasDefinedTypeReturnTag,\n  hasReturnValue,\n  hasTag,\n  hasThrowValue,\n  isNamepathDefiningTag,\n  isValidTag,\n  parseClosureTemplateTag,\n  tagMightHaveEitherTypeOrNamePosition,\n  tagMightHaveNamePosition,\n  tagMightHaveTypePosition,\n  tagMustHaveEitherTypeOrNamePosition,\n  tagMustHaveNamePosition,\n  tagMustHaveTypePosition,\n};\n"],"file":"jsdocUtils.js"}